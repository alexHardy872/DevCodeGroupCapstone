@model DevCodeGroupCapstone.Models.View_Models.BigIndexViewModel


  





    <div id="teacherView">


   


        @*<div class="container">*@


            <div class="optionsContainer">

                <div class="optionsHeader" id="viewLessons">
                    <div class="txtBtn">
                        <span>Lessons</span>
                    </div>
                </div>


                <div class="optionsHeader" id="viewCalendar"><div class="txtBtn">Schedule</div></div>

                <div class="optionsHeader" id="viewMakeups"><div class="txtBtn">Make-ups</div></div>

                <div class="optionsHeader"id="requestNotification" ><div class="txtBtn">Requests</div></div>

            </div>


            <div id="reminder-to-fill-info">
                <span>
                    **In order to offer lessons to students as an <i>Instructor</i>, you must set your <strong><i> @Html.ActionLink("Preferences", "Create", "TeacherPreference")</i></strong> and your <strong>
                        <i>
                            @Html.ActionLink("Availability", "List", "TeacherAvailability")
                        </i>
                    </strong>... your calendar will be visible once a <i>Lesson</i>
                    is scheduled with a Student
                </span>
                <br />
                <span>You must also have at least one subject offered @Html.ActionLink("Edit here", "Edit", new { id = Model.currentUser.PersonId })</span>
            </div>





            <div id="lessons" style="display: none;">
                @*<h2> LESSONS</h2>*@

                <table class="table">
                    <tr>
                        <th> Lesson Date / Time </th>
                        <th> Lesson Subject </th>
                        <th> Student </th>
                        <th> Location </th>
                        <th> Price </th>
                        <th></th>
                    </tr>

                    @{
                    var lessonList = Model.teacherLessons;
                    }
                    @foreach (var lesson in lessonList)
                {
                    <tr>
                        <td>  @Html.DisplayFor(modelItem => lesson.start) - @Html.DisplayFor(modelItem => lesson.end) </td>
                        <td>  @Html.DisplayFor(modelItem => lesson.LessonType)  </td>
                        <td>  @Html.DisplayFor(modelItem => lesson.Student.firstName) @Html.DisplayFor(modelItem => lesson.Student.lastName) </td>
                        <td>  @Html.DisplayFor(modelItem => lesson.Location.address1) @Html.DisplayFor(modelItem => lesson.Location.city) @Html.DisplayFor(modelItem => lesson.Location.state) </td>
                        <td>  @Html.DisplayFor(modelItem => lesson.Price)  </td>

                        <td>
                            @Html.ActionLink("CANCEL", "../SMS/SendSMSToStudent", new { id = lesson.LessonId, alert = "cancel" })
                        </td>
                        <td>
                            @Html.ActionLink("DETAILS", "../Lesson/Details", new { id = lesson.LessonId })

                        </td>
                    </tr>
                }

                </table>
            </div>



            <div id="requestedLessons" style="display: none;">
                <h2> Requests </h2>

                <table class="table">
                    <tr>
                        <th> Lesson Date / Time </th>
                        <th> Lesson Subject </th>
                        <th> Student </th>
                        <th> Location </th>
                        <th> Price </th>
                        <th></th>
                    </tr>

                    @{
                    var lessons = Model.requestsForTeacher;
                    var notify = false;
                    
                   
                    }
                    @foreach (var lesson in lessons)
                {
                    <tr>
                        <td>  @Html.DisplayFor(modelItem => lesson.start) - @Html.DisplayFor(modelItem => lesson.end) </td>
                        <td>  @Html.DisplayFor(modelItem => lesson.LessonType)  </td>
                        <td>  @Html.DisplayFor(modelItem => lesson.Student.firstName) @Html.DisplayFor(modelItem => lesson.Student.lastName) </td>
                        <td>  @Html.DisplayFor(modelItem => lesson.Location.address1) @Html.DisplayFor(modelItem => lesson.Location.city) @Html.DisplayFor(modelItem => lesson.Location.state) </td>
                        <td>  @Html.DisplayFor(modelItem => lesson.Price)  </td>

                        <td>
                            <button>
                                @Html.ActionLink("APPROVE/EDIT", "../Lesson/Edit", new { id = lesson.LessonId })
                            </button>
                            <button>
                                @Html.ActionLink("DENY", "../Lesson/QuickDelete", new { id = lesson.LessonId })

                            </button>

                        </td>
                        <td>
                            @Html.ActionLink("DETAILS", "../Lesson/Details", new { id = lesson.LessonId })

                        </td>
                    </tr>
                }

                </table>
            </div>

            <div id="makeups" style="display: none;">
                <h2> Make-up Lessons</h2>

                <table class="table">
                    <tr>
                        <th> Student Name </th>
                        <th> Location of Lesson </th>
                        <th> Date of cancelled lesson </th>

                        <th></th>
                    </tr>

                    @{
                    var makeupList = Model.makeups;

                    }
                    @foreach (var lesson in makeupList)
                {
                    <tr>
                        <td>  @Html.DisplayFor(modelItem => lesson.Student.firstName) @Html.DisplayFor(modelItem => lesson.Student.lastName) </td>
                        <td>  @Html.DisplayFor(modelItem => lesson.Location.address1) @Html.DisplayFor(modelItem => lesson.Location.city) @Html.DisplayFor(modelItem => lesson.Location.state) </td>

                        <td>  @Html.DisplayFor(modelItem => lesson.start.Date) @Html.DisplayFor(modelItem => lesson.end.Date) </td>

                        <td>
                            @Html.ActionLink("REMOVE", "../Lesson/QuickDelete", new { id = lesson.LessonId })
                        </td>

                    </tr>
                }
                    <tr>
                        <td>
                            <button>@Html.ActionLink("CREATE MAKEUP", "../Lesson/CreateMakeup")</button>
                        </td>
                    </tr>

                </table>
            </div>


            <div id="calendar" style="display: none;"></div>
        @*</div>*@
    </div>

<link rel="stylesheet" type="text/css" href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/4.2.0/core/main.min.css">
<link rel="stylesheet" type="text/css" href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/4.2.0/timegrid/main.min.css">
<link rel="stylesheet" type="text/css" href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/4.2.0/list/main.min.css">
<link rel="stylesheet" type="text/css" href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/4.2.0/daygrid/main.min.css">

<script src="//cdnjs.cloudflare.com/ajax/libs/jquery/3.4.1/jquery.min.js" type="text/javascript"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js" type="text/javascript"></script>
<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js"></script>
<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/4.2.0/core/main.min.js"></script>
<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/4.2.0/daygrid/main.min.js"></script>
<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/4.2.0/interaction/main.min.js"></script>
<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/4.2.0/timegrid/main.min.js"></script>









<script>
    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('calendar');


        (function ($) {

            ResetHeader();

            function ResetHeader() {
                 $("index-header-parent").html("");
            $("#index-header-parent").append(" <div class='index-header'><h2><strong>@Model.currentUser.firstName  @Model.currentUser.lastName:</strong> Instructor Dashboard </h2> </div>");
            }


            $.ajax({

                url: 'https://localhost:44326/api/ScheduleApi?generateForView=teacherSchedule&teacherIdInt=@Model.currentUser.PersonId&studentIdInt=@Model.currentUser.PersonId',

                type: 'GET',
                success: function (result) {

                    var calendar = new FullCalendar.Calendar(calendarEl, {
                        plugins: ['interaction', 'dayGrid', 'timeGrid'],
                        defaultView: 'timeGridWeek',
                        defaultDate: '2019-11-18',
                        header: {
                            left: 'prev,next today',
                            center: 'title',
                            right: 'dayGridMonth,timeGridWeek,timeGridDay'
                        },
                        events: result
                    });

                    calendar.render();
                },
                error: function (jqXhr, textStatus, errorThrown) {
                    console.log(errorThrown);
                }
            });


            updateNotification();
            function updateNotification() {
                if (@Model.requestsForTeacher.Count != 0) {
                    $("#requestNotification").css("color", "orange");
                    $("#requestNotification") > $(".textBtn").html("Requests ("+"@Model.requestsForTeacher.Count)");
                }
            }


            function resetClosedTabs() {
                 $("#viewLessons").css("font-weight", "normal");
                 $("#viewLessons").css("border", "2pt solid rgba(56, 119, 128, .30)");
                 $("#viewCalendar").css("font-weight", "normal");
                 $("#viewCalendar").css("border", "2pt solid rgba(56, 119, 128, .30)");
                 $("#viewMakeups").css("font-weight", "normal");
                 $("#viewMakeups").css("border", "2pt solid rgba(56, 119, 128, .30)");
                 $("#requestNotification").css("font-weight", "normal");
                 $("#requestNotification").css("border", "2pt solid rgba(56, 119, 128, .30)");
            }

             $( "#viewLessons" ).click(function() {
                 console.log("Handler for .click() called."); 
                             $("#reminder-to-fill-info").hide();
                            $("#calendar").hide();
                            $("#lessons").show();  
                            $("#requestedLessons").hide();
                 $("#makeups").hide();
                

                 resetClosedTabs();

                 $(this).css("font-weight", "bold");
                 $(this).css("border-bottom", "none");
                 $(this).css("border-color", "rgb(56, 119, 128)");
               


              });
            $( "#viewCalendar" ).click(function() {
                console.log("Handler for .click() called."); 
                $("#reminder-to-fill-info").hide();
                            $("#calendar").show();
                            $("#lessons").hide();  
                            $("#requestedLessons").hide();
                $("#makeups").hide();

                resetClosedTabs();

                 $(this).css("font-weight", "bold");
                 $(this).css("border-bottom", "none");
                  $(this).css("border-color", "rgb(56, 119, 128)");
            });
            $( "#requestNotification" ).click(function() {
                console.log("Show requests");    
                $("#reminder-to-fill-info").hide();
                            $("#requestedLessons").show();
                            $("#lessons").hide(); 
                            $("#calendar").hide();  
                $("#makeups").hide();

                 resetClosedTabs();
                 $(this).css("font-weight", "bold");
                 $(this).css("border-bottom", "none");
                $(this).css("border-color", "rgb(56, 119, 128)");
                $(this).css("color", "black");
                    $("#requestNotification") > $(".textBtn").html("Requests");

            });
              $( "#viewMakeups" ).click(function() {
                  console.log("Show Makeups");  
                  $("reminder-to-fill-info").hide();
                            $("#makeups").show();
                            $("#requestedLessons").hide();
                            $("#lessons").hide(); 
                  $("#calendar").hide();  

                  resetClosedTabs();
                 $(this).css("font-weight", "bold");
                 $(this).css("border-bottom", "none");
                  $(this).css("border-color", "rgb(56, 119, 128)");
            });



        })(jQuery);

    });
</script>

