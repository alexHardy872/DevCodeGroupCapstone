@model DevCodeGroupCapstone.Models.View_Models.PersonAndLocationViewModel

@{
    ViewBag.Title = "Details";
}





<div class="container">
    <div class="row">

        <div class="col-md-6">

            <h4>Lesson Details</h4>
            <hr />
            <dl class="dl-horizontal">
                <dt>
                    @Html.DisplayNameFor(model => model.person.firstName)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.person.firstName)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.person.lastName)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.person.lastName)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.person.subjects)
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.person.subjects)
                </dd>
            </dl>
        </div>
        <div class="col-md-6" id="teacherAvailability">
            <h1>@Model.person.firstName @Model.person.lastName's Availabilities</h1>
            <table id="timeslotsTable">
                <tr>
                    <td> <button>@Html.ActionLink("REQUEST CUSTOM IN-STUDIO LESSON", "../Lesson/Create", new { teacherId = Model.person.PersonId })</button> </td>
                </tr>


            </table>
        </div>

    </div>
</div>

<div id="map" style="height: 400px; width: 400px;"></div>

<script>
    var map;

    function initMap() {

        //pin to represent the teacher's location
        var pinLocation = { lat: @Model.location.lat, lng: @Model.location.lng};

        //add a map
        map = new google.maps.Map(document.getElementById('map'), {
            zoom: 11,
            center: pinLocation
        });

        //roadmap style
        var mapOptions = {
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            styles: [{ featureType: 'all', stylers: [{ saturation: -100 }, { brightness: 5 }] }],
            scrollwheel: false
        };

        //add a marker
        var marker = new google.maps.Marker({ position: pinLocation, map: map });

        //add a radius for max range
        var teacherRadius = new google.maps.Circle({
          strokeColor: '#FF0000',
          strokeOpacity: 0.8,
          strokeWeight: 2,
          fillColor: '#FF0000',
          fillOpacity: 0.35,
          map: map,
          center: pinLocation,
          radius: @ViewBag.radius
        });
     }
</script>

@{ 
    var ApiUrlStr = DevCodeGroupCapstone.Private.ApiKey.googleMapsApiUrl;
    var ApiKeyStr = DevCodeGroupCapstone.Private.ApiKey.googleMapsApiKey;
    var ApiKeyCbk = DevCodeGroupCapstone.Private.ApiKey.googleMapsCallback;
    string googleMapsRequest = ApiUrlStr + ApiKeyStr + ApiKeyCbk;}

<script src=@googleMapsRequest async defer>

</script>

<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.person.PersonId }) |
    @Html.ActionLink("Back to List", "Index")
</p>



<script> // GENERATE AVAILABILITIES FOR TEACHER???
    document.addEventListener('DOMContentLoaded', function () {


        (function ($) {





             $.ajax({
                url: 'https://localhost:44326/api/ScheduleApi?generateForView=lessonOptions&teacherIdInt=@Model.person.PersonId',
                type: 'GET',
                success: function (result) {
                    console.log("success");
                    console.log(result);
                    $("#teacherAvailability").append(result);
                    

                    
                },
                error: function (jqXhr, textStatus, errorThrown) {
                    console.log(errorThrown);
                }
            });


    })(jQuery);

    });
</script>
